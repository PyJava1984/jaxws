#
# Sequence Diagram for stream-based message decoding.
#
# All the SOAP header blocks are buffered in oen buffer 
# and each is marked. Parsing stops at the first child of the
# soap:Body

# graph properties
boxht = 0.8;

object(AP,"Abstract" "Processor");
object(SM,"Stream" "Message");
object(SD,"Stream" "Decoder");
object(SB,"Stream" "Buffer");
object(PF, "Parser" "Factory");

step();
step();

active(AP);
    message(AP,SD,"deocde(InputStream)");

    active(SD);

	message(SD,PF,"createXMLStreamReader(InputStream)");
	active(PF)
	    rmessage(PF,SD,"XMLStreamReader");
	inactive(PF);

	message(SD,SM,"createMessage()");
	active(SM)
	    rmessage(SM,SD,"Message");
	inactive(SM);

	message(SD,SD,"check start soap:Envelope");

	step();

	active(SD);
	    message(SD,SD, "check start soap:Header");

	    message(SD,SB,"create buffer");
	    active(SB);
		rmessage(SB,SD,"Buffer");
	    inactive(SB);

	    message(SD,SD,"check header block attributes");
	    message(SD,SD,"buffer header block");
	    message(SD,SM, "createHeader(role, relay, mustUnderstand, StreamBufferMark)");
	    active(SM);
		rmessage(SM,SD);
	    inactive(SM);

	    message(SD,SD, "check end soap:Header");

	inactive(SD);

	message(SD,SD, "check soap:Body");

	message(SD,SD, "stop at first child of soap:Body");

	message(SD,SM, "setBody(Qualified Name, XMLStreamReader)");
	active(SM);
	    rmessage(SM,SD);
	inactive(SM);

	rmessage(SD,AP, "Message");
    inactive(SD);

message(AP,AP, "validate mustUnderstand");

message(AP,AP, "identify one way message");

inactive(AP);
