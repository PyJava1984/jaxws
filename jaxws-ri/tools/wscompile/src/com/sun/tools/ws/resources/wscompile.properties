#
# Copyright 2005 Sun Microsystems, Inc. All rights reserved.
# SUN PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
#

wsimport.usage=Usage: {0} [options] <WSDL_URI>\n\n\
Use "wsimport -help" for a detailed description of options.

wsimport.help=\nUsage: {0} [options] <WSDL_URI>\n\n\
\where [options] include:\n\
\  -b <path>                 specify external jaxws or jaxb binding files\n\
\                            (Each <file> must have its own -b)\n\
\  -catalog <file>           specify catalog file to resolve external entity references\n\
\                            supports TR9401, XCatalog, and OASIS XML Catalog format.\n\
\  -d <directory>            specify where to place generated output files\n\
\  -extension                allow vendor extensions - functionality not specified\n\
\                            by the specification.  Use of extensions may\n\
\                            result in applications that are not portable or\n\
\                            may not interoperate with other implementations\n\
\  -help                     display help\n\
\  -httpproxy:<host>:<port>  specify a HTTP proxy server (port defaults to 8080)\n\
\  -keep                     keep generated files\n\
\  -p <pkg>                  specifies the target package\n\
\  -quiet                    suppress wsimport output\n\
\  -s <directory>            specify where to place generated source files\n\
\  -target <version>         generate code as per the given JAXWS specification version.\n\
\                            version 2.0 will generate compliant code for JAXWS 2.0 spec.\n\
\  -verbose                  output messages about what the compiler is doing\n\
\  -version                  print version information\n\
\  -wsdllocation <location>  @WebServiceClient.wsdlLocation value

wsimport.usage.examples=\n\
\Examples:\n\
\  wsimport stock.wsdl -b stock.xml -b stock.xjb\n\
\  wsimport -d generated http://example.org/stock?wsdl\n\


wsgen.usage=Usage: {0} [options] <SEI>\n\n\
Use "wsgen -help" for a detailed description of options.

wsgen.help=\nUsage: {0} [options] <SEI>\n\n\
\where [options] include:\n\
\  -classpath <path>          specify where to find input class files\n\
\  -cp <path>                 same as -classpath <path>\n\
\  -d <directory>             specify where to place generated output files\n\
\  -extension                 allow vendor extensions - functionality not specified\n\
\                             by the specification.  Use of extensions may\n\
\                             result in applications that are not portable or\n\
\                             may not interoperate with other implementations\n\
\  -help                      display help\n\
\  -keep                      keep generated files\n\
\  -r <directory>             resource destination directory, specify where to\n\
\                             place resouce files such as WSDLs\n\
\  -s <directory>             specify where to place generated source files\n\
\  -verbose                   output messages about what the compiler is doing\n\
\  -version                   print version information\n\
\  -wsdl[:protocol]           generate a WSDL file.  The protocol is optional.\n\
\                             Valid protocols are soap1.1 and Xsoap1.2, the default\n\
\                             is soap1.1.  Xsoap1.2 is not standard and can only be\n\
\                             used in conjunction with the -extension option\n\
\  -servicename <name>        specify the Service name to use in the generated WSDL\n\
\                             Used in conjunction with the -wsdl option.\n\
\  -portname <name>           specify the Port name to use in the generated WSDL\n\
\                             Used in conjunction with the -wsdl option.

wsgen.usage.examples=\n\
\Examples:\n\
\  wsgen -cp . example.Stock\n\
\  wsgen -cp . example.Stock -wsdl -servicename '{http://mynamespace}MyService'\n\



#
# Generic Messages
#
wscompile.invalidOption= \
  unrecognized parameter {0}

wscompile.error=error: {0}
wscompile.warning=warning: {0}
wscompile.info=info: {0}
wscompile.duplicateOption=duplicate option: {0}
wscompile.noSuchDirectory=directory not found: {0}
wscompile.missingOptionArgument=option \"{0}\" requires an argument
wscompile.compilationFailed=compilation failed, errors should have been reported

wsimport.missingFile=Missing WSDL_URI

wsgen.invalid.protocol=\"{0}\" is not a supported protocol.  Supported protocols include: {1}.
wsgen.invalid.transport=\"{0}\" is not a supported transport.  Supported transport include: {1}.
wsgen.class.not.found=Class not found: \"{0}\"
wsgen.could.not.create.file="Could not create file: "\{0}\"
wsgen.missingFile=Missing SEI
wsgen.soap12.without.extension=The optional protocol \"Xsoap1.2\" must be used in conjunction with the \"-extension\" option.
wsgen.wsdl.arg.no.genwsdl=The \"{0}\" option can only be in conjunction with the "-wsdl" option. 
wsgen.servicename.missing.namespace=The service name \"{0}\" is missing a namespace.
wsgen.servicename.missing.localname=The service name \"{0}\" is missing a localname.
wsgen.portname.missing.namespace=The port name \"{0}\" is missing a namespace.
wsgen.portname.missing.localname=The port name \"{0}\" is missing a localname.
wsgen.class.must.be.implementation.class=The class \"{0}\" is not an endpoint implementation class.
wsimport.NotAFileNorURL = \
    "{0}" is neither a file name nor an URL

wsgen.cannot.gen.wsdl.for.non.soap.binding=wsgen can not generate WSDL for non-SOAP binding: {0} on Class {1}

wsgen.cannot.gen.wsdl.for.soap12.binding=wsgen can not generate WSDL for SOAP 1.2 binding: {0} on class: {1}.\n
Please specify \"-extension\" and \"-wsdl:protocol XSoap1.2\" switches. For example:\n\n
wsgen -wsdl:protocol XSoap1.2 -extenson {1}

wsgen.no.webservices.class=wsgen did not find any class with @WebService annotation. Please specify @WebService annotation on {0}.

wsimport.FailedToParse = \
    Failed to parse "{0}": {1}

wsimport.ParsingWSDL=parsing WSDL...\n\n
wsimport.GeneratingCode=generating code...

wsimport.ILLEGAL_TARGET_VERSION = \
    "{0}" is not a valid target version. "2.0" and "2.1" are supported.

wsimport.ErrorMessage = \
	[ERROR] {0}

wsimport.WarningMessage = \
	[WARNING] {0}

wsimport.InfoMessage = \
	[INFO] {0}
