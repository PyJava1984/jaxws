<descriptor since="2.0">
  <description>Micro benchmark for rpc/lit</description>
  <service>
    <wsdl href="rpclit.wsdl" />
  </service>
  <pre-client>
    createComplexType() {
      ct = new ComplexType();
      ct.setVarString("hello world");
      ct.setVarInt(53);
      ct.setVarFloat(913.4f);
      return ct;
    }
    createNestedComplexType() {
      nct = new NestedComplexType();
      nct.setVarString("hello world");
      nct.setVarInt(53);
      nct.setVarFloat(913.4f);
      nct.setVarComplexType(createComplexType());
      return nct;
    }
  </pre-client>
  <client name="echoVoid">
    echoPort.echoVoid();
  </client>
  <client name="echoString">
    echoPort.echoString("hello");
  </client>
  <client name="echoBoolean">
    echoPort.echoBoolean(true);
    echoPort.echoBoolean(false);
  </client>
  <client name="echoBase64"><![CDATA[
    buf = new StringBuffer();
    for(int i=0;i<10;i++) buf.append("0123456789");
    echoPort.echoBase64(buf.toString().getBytes());
  ]]></client>
  <client name="echoDate">
    import javax.xml.datatype.*;
    DatatypeFactory dtf = DatatypeFactory.newInstance();
    Calendar cal = Calendar.getInstance();
    gregorianDate = dtf.newXMLGregorianCalendarDate(2005, 1, 12, DatatypeConstants.FIELD_UNDEFINED);

    echoPort.echoDate(gregorianDate);
  </client>
  <client name="echoFloat">
    echoPort.echoFloat(1.234f);
  </client>
  <client name="echoInteger">
    echoPort.echoInteger(123);
  </client>
  <client name="echoDecimal">
    echoPort.echoDecimal(new java.math.BigDecimal("123"));
  </client>
  <client name="echoEnum">
    echoPort.echoEnum(Enum.BIT_FIVE);
  </client>
  <client name="echoStringArray"><![CDATA[
    lst = new StringArray();
    for( int i=0; i<10; i++ )
      lst.getValue().add("hello world");
    echoPort.echoStringArray(lst);
  ]]></client>
  <client name="echoIntArray"><![CDATA[
    lst = new IntegerArray();
    for( int i=0; i<10; i++ )
      lst.getValue().add(i);
    echoPort.echoIntegerArray(lst);
  ]]></client>
  <client name="echoFloatArray"><![CDATA[
    lst = new FloatArray();
    for( int i=0; i<10; i++ )
      lst.getValue().add((float)i);
    echoPort.echoFloatArray(lst);
  ]]></client>
  <client name="echoComplexType">
    echoPort.echoComplexType(createComplexType());
  </client>
  <client name="echoNestedComplexType">
    echoPort.echoNestedComplexType(createNestedComplexType());
  </client>
  <client name="echoComplexTypeArray"><![CDATA[
    lst = new ComplexTypeArray();
    for(int i=0;i<100;i++)
      lst.getValue().add(createComplexType());
    echoPort.echoComplexTypeArray(lst);
  ]]></client>
</descriptor>
