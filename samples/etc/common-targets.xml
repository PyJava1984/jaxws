<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the "License").  You may not use this file except
 in compliance with the License.
 
 You can obtain a copy of the license at
 https://jwsdp.dev.java.net/CDDLv1.0.html
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 HEADER in each file and include the License file at
 https://jwsdp.dev.java.net/CDDLv1.0.html  If applicable,
 add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your
 own identifying information: Portions Copyright [yyyy]
 [name of copyright owner]
-->

<property environment="env"/>
<property name="lib.home" value="${env.JAXWS_HOME}/lib"/>
<property name="as.home" value="${env.AS_HOME}"/>

<property name="lib.sample.home" value="${basedir}/../lib"/>

<property name="build.home" value="${basedir}/../build"/>
<property name="build.classes.home" value="${build.home}/classes"/>
<property name="build.war.home" value="${build.home}/war"/>
<property name="domain" value="domain1"/>

<property name="keep" value="true"/>


<path id="jaxws.classpath">
    <pathelement location="${java.home}/../lib/tools.jar"/>
    <pathelement location="${lib.sample.home}/jaxwsSampleUtils.jar"/>
    <fileset dir="${lib.home}" includes="*.jar"/>
</path>

<taskdef name="wsimport" classname="com.sun.tools.ws.ant.WsImport">
    <classpath refid="jaxws.classpath"/>
</taskdef>

<taskdef name="wsgen" classname="com.sun.tools.ws.ant.WsGen">
    <classpath refid="jaxws.classpath"/>
</taskdef>

<taskdef name="apt" classname="com.sun.tools.ws.ant.Apt">
    <classpath refid="jaxws.classpath"/>
</taskdef>

<target name="setup">
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.classes.home}"/>
    <mkdir dir="${build.war.home}"/>
</target>

<target name="build-server-java" depends="setup">
    <apt
        fork="true"
        debug="${debug}"
    	verbose="${verbose}"
    	destdir="${build.classes.home}"
    	sourcedestdir="${build.classes.home}"
    	sourcepath="${basedir}/src">
        <classpath>
        <path refid="jaxws.classpath"/>
            <pathelement location="${basedir}/src"/>
        </classpath>
        <option key="r" value="${build.home}"/>
        <option key="verbose" value="${verbose}"/>
        <source dir="${basedir}/src">
            <include name="**/server/*.java"/>
            <include name="**/common/*.java"/>
        </source>
    </apt>
    <!-- copy handlers descriptor file -->
    <copy todir="${build.classes.home}">
        <fileset dir="${basedir}/src">
            <include name="**/server/**/*.xml"/>
        </fileset>
    </copy>
</target>

<target name="server-j2se" depends="setup">

    <antcall target="clean" />
    <antcall target="build-server-java" />
    <java fork="true" classname="${j2se.sei}">
        <classpath>
            <path refid="jaxws.classpath"/>
            <pathelement location="${build.classes.home}"/>
        </classpath>
    </java>

</target>

<target name="build-server-wsdl" depends="setup">
    <wsimport
        fork="true"
        debug="${debug}"
        verbose="${verbose}"
        keep="${keep}"
        extension="${extension}"
        destdir="${build.classes.home}"
        wsdl="${server.wsdl}">
        <binding dir="${basedir}/etc" includes="${server.binding}"/>
    </wsimport>
    <javac
        fork="true"
        srcdir="${basedir}/src"
        destdir="${build.classes.home}"
        includes="**/server/**,**/common/**">
        <classpath refid="jaxws.classpath"/>
    </javac>
</target>

<target name="create-war">
    <war warfile="${build.war.home}/jaxws-${ant.project.name}.war" webxml="etc/web.xml">
	<webinf dir="${basedir}/etc" includes="sun-jaxws.xml"/>
	<zipfileset
            dir="${basedir}/etc"
            includes="*.wsdl, *.xsd"
            prefix="WEB-INF/wsdl"/>
	<classes dir="${build.classes.home}"/>
    </war>
</target>

<target name="deploy">
    <copy file="${build.war.home}/jaxws-${ant.project.name}.war"
        todir="${as.home}/domains/${domain}/autodeploy"/>
</target>

<target name="generate-client" depends="setup">
    <wsimport
        fork="true"
        debug="${debug}"
        verbose="${verbose}"
        keep="${keep}"
        extension="${extension}"
        destdir="${build.classes.home}"
        wsdl="${client.wsdl}">
        <binding dir="${basedir}/etc" includes="${client.binding}"/>
    </wsimport>
</target>

<target name="client" depends="generate-client">
    <javac
        fork="true"
        srcdir="${basedir}/src"
        destdir="${build.classes.home}"
        includes="**/client/**,**/common/**">
        <classpath refid="jaxws.classpath"/>
    </javac>
</target>

<target name="run">
    <java fork="true" classname="${client}">
        <classpath>
            <path refid="jaxws.classpath"/>
            <pathelement location="${build.classes.home}"/>
            <pathelement location="${basedir}/etc"/>
        </classpath>
    </java>
</target>

<target name="clean">
    <delete dir="${build.home}" includeEmptyDirs="true" />
</target>

<target name="help">
    <echo message="server:       Builds and deploy the service endpoint WAR"/>
    <echo message="client:       Builds the client"/>
    <echo message="run:          Runs the client"/>
</target>


